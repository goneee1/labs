                                                                                                                                         
┌──(kali㉿kali)-[~/yandex-cloud/bin]
└─$ terraform init                                                        
terraform plan
terraform apply -auto-approve


Initializing the backend...

Initializing provider plugins...
- Reusing previous version of yandex-cloud/yandex from the dependency lock file
- Reusing previous version of hashicorp/template from the dependency lock file
- Using previously-installed yandex-cloud/yandex v0.138.0
- Using previously-installed hashicorp/template v2.2.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
data.template_cloudinit_config.config: Reading...
data.template_cloudinit_config.config: Read complete after 0s [id=842580589]
yandex_vpc_network.network: Refreshing state... [id=enpskl5dsq54krmipq7b]
^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[B^[[Byandex_vpc_subnet.subnet: Refreshing state... [id=e9bfn5r92vl7gjlpur6l]
yandex_vpc_security_group.firewall: Refreshing state... [id=enp6ft8ra7pa1krps16d]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.vm[0] will be created
  + resource "yandex_compute_instance" "vm" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys"  = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDuG7uxB5Kj8lLCvNqeIKn4IAnZPvc09+k0Gs3HW4VfDNU9/NQWQ1X54kSolmQzwZRjNSpb28Hs2dLCerLMcvY1ABGxFCpM8fEHJvQ1t8cHvDtSC4Y11rPswvZepHyr49ZXupKPn2qufif/dvR+QNcO+Nx2KLTUIwODM4EiRYviD6SkyPCHUSTu/hrnKTN7QtGkTAcdt3aK38o6wa2fildO17Ht4iVlOHlRVJRp/l2zT5w57kWWdjTne86U8dUbNnetOxiK9kL/CRWYbw1k3t8sFcPiPWzYEhlTcm9HVZ+JJhWNVImmtDHP2nMbvIQerBVgM0Ytg7Qe9xxzOLbHvBtKYoixEhkpt0JbpB74/NBxiknYh5F3VdtFEee3Lkknaq7qcUwMmlCgcU5J7lhsS4O6WL+Fpqp+//vmbnryF65j4NT7lHxJwRuTPG92AXkGeDxgeUly2Pz7fNsIfcSmO2C1ZgMxDQradaND/DOyDo1/sPa//tOgTxv6p9bBhKFg14vWNv2rlK7lc3VkXV+8OWYuo5+PPJvsT8lmh6WZRm0c97ndqyZcoUstVFUiYWgB0Kn+94W7BKSPPhFt3iMaxBEc2HSWtVbWIrrqDgcdiq67BwGjHaDlwJCRyxXF1CwDI4p38ii7xUCixj7+FQra25h03B2ZmajdTbPJEw0JLic+fQ== kali@kali
            EOT
          + "user-data" = <<-EOT
                Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
                MIME-Version: 1.0
                
                --MIMEBOUNDARY
                Content-Transfer-Encoding: 7bit
                Content-Type: text/cloud-config
                Mime-Version: 1.0
                
                #cloud-config
                package_update: true
                packages:
                  - curl
                  - wget
                  - nginx
                runcmd:
                  - systemctl enable nginx
                  - systemctl start nginx
                
                --MIMEBOUNDARY--
            EOT
        }
      + name                      = "ithub_terraforubuntuper1_mozer"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd85qh2iveusn11jcup6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = [
              + "enp6ft8ra7pa1krps16d",
            ]
          + subnet_id          = "e9bfn5r92vl7gjlpur6l"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 4
        }
    }

  # yandex_compute_instance.vm[1] will be created
  + resource "yandex_compute_instance" "vm" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys"  = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDuG7uxB5Kj8lLCvNqeIKn4IAnZPvc09+k0Gs3HW4VfDNU9/NQWQ1X54kSolmQzwZRjNSpb28Hs2dLCerLMcvY1ABGxFCpM8fEHJvQ1t8cHvDtSC4Y11rPswvZepHyr49ZXupKPn2qufif/dvR+QNcO+Nx2KLTUIwODM4EiRYviD6SkyPCHUSTu/hrnKTN7QtGkTAcdt3aK38o6wa2fildO17Ht4iVlOHlRVJRp/l2zT5w57kWWdjTne86U8dUbNnetOxiK9kL/CRWYbw1k3t8sFcPiPWzYEhlTcm9HVZ+JJhWNVImmtDHP2nMbvIQerBVgM0Ytg7Qe9xxzOLbHvBtKYoixEhkpt0JbpB74/NBxiknYh5F3VdtFEee3Lkknaq7qcUwMmlCgcU5J7lhsS4O6WL+Fpqp+//vmbnryF65j4NT7lHxJwRuTPG92AXkGeDxgeUly2Pz7fNsIfcSmO2C1ZgMxDQradaND/DOyDo1/sPa//tOgTxv6p9bBhKFg14vWNv2rlK7lc3VkXV+8OWYuo5+PPJvsT8lmh6WZRm0c97ndqyZcoUstVFUiYWgB0Kn+94W7BKSPPhFt3iMaxBEc2HSWtVbWIrrqDgcdiq67BwGjHaDlwJCRyxXF1CwDI4p38ii7xUCixj7+FQra25h03B2ZmajdTbPJEw0JLic+fQ== kali@kali
            EOT
          + "user-data" = <<-EOT
                Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
                MIME-Version: 1.0
                
                --MIMEBOUNDARY
                Content-Transfer-Encoding: 7bit
                Content-Type: text/cloud-config
                Mime-Version: 1.0
                
                #cloud-config
                package_update: true
                packages:
                  - curl
                  - wget
                  - nginx
                runcmd:
                  - systemctl enable nginx
                  - systemctl start nginx
                
                --MIMEBOUNDARY--
            EOT
        }
      + name                      = "ithub_terraforubuntuper2_mozer"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd85qh2iveusn11jcup6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = [
              + "enp6ft8ra7pa1krps16d",
            ]
          + subnet_id          = "e9bfn5r92vl7gjlpur6l"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 4
        }
    }

  # yandex_compute_instance.vm[2] will be created
  + resource "yandex_compute_instance" "vm" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys"  = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDuG7uxB5Kj8lLCvNqeIKn4IAnZPvc09+k0Gs3HW4VfDNU9/NQWQ1X54kSolmQzwZRjNSpb28Hs2dLCerLMcvY1ABGxFCpM8fEHJvQ1t8cHvDtSC4Y11rPswvZepHyr49ZXupKPn2qufif/dvR+QNcO+Nx2KLTUIwODM4EiRYviD6SkyPCHUSTu/hrnKTN7QtGkTAcdt3aK38o6wa2fildO17Ht4iVlOHlRVJRp/l2zT5w57kWWdjTne86U8dUbNnetOxiK9kL/CRWYbw1k3t8sFcPiPWzYEhlTcm9HVZ+JJhWNVImmtDHP2nMbvIQerBVgM0Ytg7Qe9xxzOLbHvBtKYoixEhkpt0JbpB74/NBxiknYh5F3VdtFEee3Lkknaq7qcUwMmlCgcU5J7lhsS4O6WL+Fpqp+//vmbnryF65j4NT7lHxJwRuTPG92AXkGeDxgeUly2Pz7fNsIfcSmO2C1ZgMxDQradaND/DOyDo1/sPa//tOgTxv6p9bBhKFg14vWNv2rlK7lc3VkXV+8OWYuo5+PPJvsT8lmh6WZRm0c97ndqyZcoUstVFUiYWgB0Kn+94W7BKSPPhFt3iMaxBEc2HSWtVbWIrrqDgcdiq67BwGjHaDlwJCRyxXF1CwDI4p38ii7xUCixj7+FQra25h03B2ZmajdTbPJEw0JLic+fQ== kali@kali
            EOT
          + "user-data" = <<-EOT
                Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
                MIME-Version: 1.0
                
                --MIMEBOUNDARY
                Content-Transfer-Encoding: 7bit
                Content-Type: text/cloud-config
                Mime-Version: 1.0
                
                #cloud-config
                package_update: true
                packages:
                  - curl
                  - wget
                  - nginx
                runcmd:
                  - systemctl enable nginx
                  - systemctl start nginx
                
                --MIMEBOUNDARY--
            EOT
        }
      + name                      = "ithub_terraforubuntuper3_mozer"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd85qh2iveusn11jcup6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = [
              + "enp6ft8ra7pa1krps16d",
            ]
          + subnet_id          = "e9bfn5r92vl7gjlpur6l"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 4
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly these actions if you run "terraform
apply" now.
data.template_cloudinit_config.config: Reading...
data.template_cloudinit_config.config: Read complete after 0s [id=842580589]
yandex_vpc_network.network: Refreshing state... [id=enpskl5dsq54krmipq7b]
yandex_vpc_subnet.subnet: Refreshing state... [id=e9bfn5r92vl7gjlpur6l]
yandex_vpc_security_group.firewall: Refreshing state... [id=enp6ft8ra7pa1krps16d]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # yandex_compute_instance.vm[0] will be created
  + resource "yandex_compute_instance" "vm" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys"  = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDuG7uxB5Kj8lLCvNqeIKn4IAnZPvc09+k0Gs3HW4VfDNU9/NQWQ1X54kSolmQzwZRjNSpb28Hs2dLCerLMcvY1ABGxFCpM8fEHJvQ1t8cHvDtSC4Y11rPswvZepHyr49ZXupKPn2qufif/dvR+QNcO+Nx2KLTUIwODM4EiRYviD6SkyPCHUSTu/hrnKTN7QtGkTAcdt3aK38o6wa2fildO17Ht4iVlOHlRVJRp/l2zT5w57kWWdjTne86U8dUbNnetOxiK9kL/CRWYbw1k3t8sFcPiPWzYEhlTcm9HVZ+JJhWNVImmtDHP2nMbvIQerBVgM0Ytg7Qe9xxzOLbHvBtKYoixEhkpt0JbpB74/NBxiknYh5F3VdtFEee3Lkknaq7qcUwMmlCgcU5J7lhsS4O6WL+Fpqp+//vmbnryF65j4NT7lHxJwRuTPG92AXkGeDxgeUly2Pz7fNsIfcSmO2C1ZgMxDQradaND/DOyDo1/sPa//tOgTxv6p9bBhKFg14vWNv2rlK7lc3VkXV+8OWYuo5+PPJvsT8lmh6WZRm0c97ndqyZcoUstVFUiYWgB0Kn+94W7BKSPPhFt3iMaxBEc2HSWtVbWIrrqDgcdiq67BwGjHaDlwJCRyxXF1CwDI4p38ii7xUCixj7+FQra25h03B2ZmajdTbPJEw0JLic+fQ== kali@kali
            EOT
          + "user-data" = <<-EOT
                Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
                MIME-Version: 1.0
                
                --MIMEBOUNDARY
                Content-Transfer-Encoding: 7bit
                Content-Type: text/cloud-config
                Mime-Version: 1.0
                
                #cloud-config
                package_update: true
                packages:
                  - curl
                  - wget
                  - nginx
                runcmd:
                  - systemctl enable nginx
                  - systemctl start nginx
                
                --MIMEBOUNDARY--
            EOT
        }
      + name                      = "ithub_terraforubuntuper1_mozer"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd85qh2iveusn11jcup6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = [
              + "enp6ft8ra7pa1krps16d",
            ]
          + subnet_id          = "e9bfn5r92vl7gjlpur6l"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 4
        }
    }

  # yandex_compute_instance.vm[1] will be created
  + resource "yandex_compute_instance" "vm" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys"  = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDuG7uxB5Kj8lLCvNqeIKn4IAnZPvc09+k0Gs3HW4VfDNU9/NQWQ1X54kSolmQzwZRjNSpb28Hs2dLCerLMcvY1ABGxFCpM8fEHJvQ1t8cHvDtSC4Y11rPswvZepHyr49ZXupKPn2qufif/dvR+QNcO+Nx2KLTUIwODM4EiRYviD6SkyPCHUSTu/hrnKTN7QtGkTAcdt3aK38o6wa2fildO17Ht4iVlOHlRVJRp/l2zT5w57kWWdjTne86U8dUbNnetOxiK9kL/CRWYbw1k3t8sFcPiPWzYEhlTcm9HVZ+JJhWNVImmtDHP2nMbvIQerBVgM0Ytg7Qe9xxzOLbHvBtKYoixEhkpt0JbpB74/NBxiknYh5F3VdtFEee3Lkknaq7qcUwMmlCgcU5J7lhsS4O6WL+Fpqp+//vmbnryF65j4NT7lHxJwRuTPG92AXkGeDxgeUly2Pz7fNsIfcSmO2C1ZgMxDQradaND/DOyDo1/sPa//tOgTxv6p9bBhKFg14vWNv2rlK7lc3VkXV+8OWYuo5+PPJvsT8lmh6WZRm0c97ndqyZcoUstVFUiYWgB0Kn+94W7BKSPPhFt3iMaxBEc2HSWtVbWIrrqDgcdiq67BwGjHaDlwJCRyxXF1CwDI4p38ii7xUCixj7+FQra25h03B2ZmajdTbPJEw0JLic+fQ== kali@kali
            EOT
          + "user-data" = <<-EOT
                Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
                MIME-Version: 1.0
                
                --MIMEBOUNDARY
                Content-Transfer-Encoding: 7bit
                Content-Type: text/cloud-config
                Mime-Version: 1.0
                
                #cloud-config
                package_update: true
                packages:
                  - curl
                  - wget
                  - nginx
                runcmd:
                  - systemctl enable nginx
                  - systemctl start nginx
                
                --MIMEBOUNDARY--
            EOT
        }
      + name                      = "ithub_terraforubuntuper2_mozer"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd85qh2iveusn11jcup6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = [
              + "enp6ft8ra7pa1krps16d",
            ]
          + subnet_id          = "e9bfn5r92vl7gjlpur6l"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 4
        }
    }

  # yandex_compute_instance.vm[2] will be created
  + resource "yandex_compute_instance" "vm" {
      + created_at                = (known after apply)
      + folder_id                 = (known after apply)
      + fqdn                      = (known after apply)
      + gpu_cluster_id            = (known after apply)
      + hardware_generation       = (known after apply)
      + hostname                  = (known after apply)
      + id                        = (known after apply)
      + maintenance_grace_period  = (known after apply)
      + maintenance_policy        = (known after apply)
      + metadata                  = {
          + "ssh-keys"  = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDuG7uxB5Kj8lLCvNqeIKn4IAnZPvc09+k0Gs3HW4VfDNU9/NQWQ1X54kSolmQzwZRjNSpb28Hs2dLCerLMcvY1ABGxFCpM8fEHJvQ1t8cHvDtSC4Y11rPswvZepHyr49ZXupKPn2qufif/dvR+QNcO+Nx2KLTUIwODM4EiRYviD6SkyPCHUSTu/hrnKTN7QtGkTAcdt3aK38o6wa2fildO17Ht4iVlOHlRVJRp/l2zT5w57kWWdjTne86U8dUbNnetOxiK9kL/CRWYbw1k3t8sFcPiPWzYEhlTcm9HVZ+JJhWNVImmtDHP2nMbvIQerBVgM0Ytg7Qe9xxzOLbHvBtKYoixEhkpt0JbpB74/NBxiknYh5F3VdtFEee3Lkknaq7qcUwMmlCgcU5J7lhsS4O6WL+Fpqp+//vmbnryF65j4NT7lHxJwRuTPG92AXkGeDxgeUly2Pz7fNsIfcSmO2C1ZgMxDQradaND/DOyDo1/sPa//tOgTxv6p9bBhKFg14vWNv2rlK7lc3VkXV+8OWYuo5+PPJvsT8lmh6WZRm0c97ndqyZcoUstVFUiYWgB0Kn+94W7BKSPPhFt3iMaxBEc2HSWtVbWIrrqDgcdiq67BwGjHaDlwJCRyxXF1CwDI4p38ii7xUCixj7+FQra25h03B2ZmajdTbPJEw0JLic+fQ== kali@kali
            EOT
          + "user-data" = <<-EOT
                Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
                MIME-Version: 1.0
                
                --MIMEBOUNDARY
                Content-Transfer-Encoding: 7bit
                Content-Type: text/cloud-config
                Mime-Version: 1.0
                
                #cloud-config
                package_update: true
                packages:
                  - curl
                  - wget
                  - nginx
                runcmd:
                  - systemctl enable nginx
                  - systemctl start nginx
                
                --MIMEBOUNDARY--
            EOT
        }
      + name                      = "ithub_terraforubuntuper3_mozer"
      + network_acceleration_type = "standard"
      + platform_id               = "standard-v1"
      + service_account_id        = (known after apply)
      + status                    = (known after apply)
      + zone                      = "ru-central1-a"

      + boot_disk {
          + auto_delete = true
          + device_name = (known after apply)
          + disk_id     = (known after apply)
          + mode        = (known after apply)

          + initialize_params {
              + block_size  = (known after apply)
              + description = (known after apply)
              + image_id    = "fd85qh2iveusn11jcup6"
              + name        = (known after apply)
              + size        = (known after apply)
              + snapshot_id = (known after apply)
              + type        = "network-hdd"
            }
        }

      + network_interface {
          + index              = (known after apply)
          + ip_address         = (known after apply)
          + ipv4               = true
          + ipv6               = (known after apply)
          + ipv6_address       = (known after apply)
          + mac_address        = (known after apply)
          + nat                = true
          + nat_ip_address     = (known after apply)
          + nat_ip_version     = (known after apply)
          + security_group_ids = [
              + "enp6ft8ra7pa1krps16d",
            ]
          + subnet_id          = "e9bfn5r92vl7gjlpur6l"
        }

      + resources {
          + core_fraction = 100
          + cores         = 2
          + memory        = 4
        }
    }

Plan: 3 to add, 0 to change, 0 to destroy.
yandex_compute_instance.vm[0]: Creating...
yandex_compute_instance.vm[1]: Creating...
yandex_compute_instance.vm[2]: Creating...
yandex_compute_instance.vm[0]: Still creating... [10s elapsed]
yandex_compute_instance.vm[1]: Still creating... [10s elapsed]
yandex_compute_instance.vm[2]: Still creating... [10s elapsed]
yandex_compute_instance.vm[0]: Still creating... [20s elapsed]
yandex_compute_instance.vm[1]: Still creating... [20s elapsed]
yandex_compute_instance.vm[2]: Still creating... [20s elapsed]
yandex_compute_instance.vm[0]: Still creating... [30s elapsed]
yandex_compute_instance.vm[1]: Still creating... [30s elapsed]
yandex_compute_instance.vm[2]: Still creating... [30s elapsed]
yandex_compute_instance.vm[0]: Creation complete after 40s [id=fhmb0v556uei5e0896q4]
yandex_compute_instance.vm[1]: Still creating... [40s elapsed]
yandex_compute_instance.vm[2]: Still creating... [40s elapsed]
yandex_compute_instance.vm[2]: Creation complete after 45s [id=fhmv1f9q04fhhh304uk8]
yandex_compute_instance.vm[1]: Creation complete after 46s [id=fhmgbff4fq5ml8qroi1e]

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.                                                                                 
                                                                                                                                            
Outputs:                                                                                                                                    
                                                                                                                                            
vm_info = [                                                                                                                                 
  "ithub_terraforubuntuper1_mozer",
  "ithub_terraforubuntuper2_mozer",
  "ithub_terraforubuntuper3_mozer",
